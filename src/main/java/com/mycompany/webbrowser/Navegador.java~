package com.mycompany.webbrowser;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JEditorPane;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;

/**
 *
 * @author adrian
 */
public class Navegador extends javax.swing.JFrame {

    public JButton jButton1;
    public JEditorPane jEditorPane1;
    public JLabel jLabel1;
    public JScrollPane jScrollPane1;
    public JTextField jTextField1;
    public ArrayList<webPages> pages;
    public static int redirect = 0;
    

    public static String GetWebPage(String direccion, String header) {
        Socket socket;
        String html = "";
        DataOutputStream os;
        DataInputStream is;

        try {
            socket = new Socket(getHost(direccion), 80);
            os = new DataOutputStream(socket.getOutputStream());
            is = new DataInputStream(socket.getInputStream());

            os.write(header.getBytes());
            //jLabel1.setText("Sending header....");
            //this.repaint();
            System.out.println("Sending header....");
            os.flush();
            //os.close();
            String str = is.readLine();

            if (str.matches("HTTP/1\\.[0-1] 302 .*")) {
                System.out.println("Redirecting......");
//                jLabel1.setText("Redirecting...");
                return (redirect(is));
            } else {
                do {
                    str = is.readLine();
                    System.out.println(str);
                } while (!str.matches(".*<!DOCTYPE") && str != null && !str.matches(".*<.*"));
                html = str;
                do {
                    str = is.readLine();
                    html = html + "\n" + str;
                                        
                    if(str != null && (str.toLowerCase().matches(".*</body>.*") || str.toLowerCase().matches(".*</html>.*")))
                        break;
                } while (str != null);
                System.out.println("*********Salio");
                if(!str.toLowerCase().matches(".*</html>"))
                    html += "</html>";
                System.out.println(html);
                //jEditorPane1.setText(html);
                is.close();
                os.close();
                socket.close();
            }
        } catch (UnknownHostException ex) {
  //          jLabel1.setText("Host desconocido");
    //        this.repaint();
            System.err.println("Host desconocido");
            return "<h1>Host Desconocido</h1>";
        } catch (IOException ex) {
            System.err.println(ex);
        }
        System.out.println("****** DONE GETTING WEB PAGE ******");
        //jLabel1.setText("Listo");
        return html;
    }

    public static String redirect(DataInputStream is) throws IOException {
        redirect++;
        String newHost = "";
        String header;
        String str = is.readLine();
        while (str != null) {
            if (str.startsWith("Location:")) {
                newHost = str.substring(str.indexOf("/") + 2);
                break;
            }

        }
        is.close();
        header = createHeader(newHost);

        System.out.println("------Redirect Headers--------\n" + header);

        return GetWebPage(newHost, header);

    }
	public static String getHost (String url){
		int posSlash = url.indexOf("/");
		if(posSlash < 0)
			return url;
		else
			return url.substring(0, posSlash);
	}
	
	public static String getPath (String url){
		int posSlash = url.indexOf("/");
		if(posSlash < 0)
			return "/";
		else
			return url.substring(posSlash);
        }
			
    public static String createHeader(String url) {
        //int posSlash;
        String host = getHost(url);
        String path = getPath(url);
        if(redirect >2){
            path = "/";
            redirect = 0;
        }
        System.out.println(url);
        

        String get = "GET " + path + " HTTP/1.0\r\n";
        String hostname = "Host: " + host + "\r\n";
        String user = "User-Agent: Mozilla/5.0 (X11; Ubuntu; "
                + "Linux i686; rv:26.0) Gecko/20100101 Firefox/26.0\r\n";
        String accept = "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n";
        String accept_lang = "Accept-Language: es-MX,es-ES;q=0.8,es-AR;q=0.7,es;q=0.5,en-US;q=0.3,en;q=0.2\r\n";
        String accept_enc = "Accept-Encoding: gzip, deflate\r\n";
        String conn = "Connection: keep-alive\r\n\r\n";

        return get + hostname + user + accept + accept_lang + conn;

        
    }

    public void cargarPagina() {
        String direccion = jTextField1.getText();
        pages.add(new webPages(direccion));
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String header;
        if (direccion.equals("")) {
            jLabel1.setText("Direccion vacia");

            // System.out.println("Direccion vacia");
        } else {
            if (direccion.matches("http.*")) {
                direccion = direccion.substring(direccion.indexOf("/") + 2);
            }
            System.out.println(direccion);
            header = createHeader(direccion);
            System.out.println("------Headers--------\n" + header);
            jEditorPane1.setText(GetWebPage(direccion, header));
        }
    }
    
    public String historial(){
        String historial= "<h1>Historial</h1>\n ";
        if(pages.isEmpty()){
            return historial+"<h2>No existen paginas en el historial</h2>";
        }else{
            historial+="<ol>\n";
            for(int i=pages.size()-1; i>=0;i--){
                historial +="<li>"+pages.get(i)+"</li>\n";
            }
            historial+="</ol>";
            System.out.println(historial);
            return historial;
        }
        
    }
    
   

}
